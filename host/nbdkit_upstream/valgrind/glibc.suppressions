# glibc valgrind suppressions
# Copyright (C) 2016-2020 Red Hat Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# * Neither the name of Red Hat nor the names of its contributors may be
# used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS ''AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

# Allow thread-local storage from pthread_create to leak.
{
  glibc_1
  Memcheck:Leak
  fun:calloc
  ...
  fun:_dl_allocate_tls
}

# Suppress leaks from dlopen.  When running under valgrind we
# deliberately don't run dlclose because otherwise valgrind cannot
# print symbols.  So it's expected that dlopen will leak.
{
  glibc_2
  Memcheck:Leak
  ...
  obj:/usr/lib*/libdl-*
}

# bindtextdomain leaks.
{
  glibc_3
  Memcheck:Leak
  ...
  fun:bindtextdomain
}

# Both gmtime_r and locatime_r leak some sort of timezone-related
# struct inside glibc.  These are used by the log filter and the
# floppy plugin.
{
  glibc_4
  Memcheck:Leak
  fun:malloc
  ...
  fun:tzset_internal
}

# __printf_chk leaks.
{
  glibc_5
  Memcheck:Leak
  fun:malloc
  ...
  fun:__printf_chk
}

# iconv is very leaky, even if we close the handle.
{
  glibc_6
  Memcheck:Leak
  fun:malloc
  ...
  fun:__gconv_open
}

{
  glibc_7
  Memcheck:Leak
  fun:calloc
  ...
  fun:__gconv_open
}

# getaddrinfo leaks a memory allocation even though we
# call freeaddrinfo.
{
  glibc_8
  Memcheck:Leak
  fun:malloc
  ...
  fun:__check_pf
  fun:getaddrinfo
}
