.\" Automatically generated by Podwrapper::Man 1.21.8 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "nbdkit-truncate-filter 1"
.TH nbdkit-truncate-filter 1 "2020-06-10" "nbdkit-1.21.8" "NBDKIT"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nbdkit\-truncate\-filter \- change the size of plugins
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& nbdkit \-\-filter=truncate plugin [truncate=SIZE]
\&                                 [round\-up=N] [round\-down=N]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`nbdkit\-truncate\-filter\*(C'\fR is a filter that changes the size of
the underlying plugin.  It can:
.IP "\(bu" 4
Make the plugin smaller (truncate it).  Use the \f(CW\*(C`truncate=SIZE\*(C'\fR
parameter to set the smaller size.
.IP "\(bu" 4
Make the plugin larger (the additional bytes read back as zeroes).
Use \f(CW\*(C`truncate=SIZE\*(C'\fR to set the larger size.
.IP "\(bu" 4
Round the size of the plugin up or down to the next multiple of \f(CW\*(C`N\*(C'\fR.
Use either \f(CW\*(C`round\-up=N\*(C'\fR or \f(CW\*(C`round\-down=N\*(C'\fR.
.PP
A common use for this filter is to handle \s-1NBD\s0 clients which have a
problem dealing with device sizes which are not a multiple of 512
bytes.  Use \f(CW\*(C`round\-up=512\*(C'\fR to round the size up to the next multiple
of 512 bytes.  If the size is already a multiple of 512 bytes then
this has no effect.
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.IP "\fBtruncate=\fR\s-1SIZE\s0" 4
.IX Item "truncate=SIZE"
Set the absolute size in bytes of the apparent device.  This may be
smaller or larger or the same as the underlying plugin.
.Sp
If the size is larger than the underlying plugin, reading the extra
space returns zeroes.  Writes are also permitted to the extra space,
but you must only write zeroes (any attempts to write non-zero bytes
will return an error back to the client).
.Sp
This parameter is optional.
.IP "\fBround\-up=\fRN" 4
.IX Item "round-up=N"
Round the size up to the next multiple of \f(CW\*(C`N\*(C'\fR bytes.  If the size of
the underlying plugin is already a multiple of \f(CW\*(C`N\*(C'\fR bytes, this has no
effect.
.Sp
This option is useful when combined with other filters (such as
\&\fInbdkit\-blocksize\-filter\fR\|(1), \fInbdkit\-cache\-filter\fR\|(1), or
\&\fInbdkit\-cow\-filter\fR\|(1)) that normally round down due to a larger
granularity, in order to access the last few bytes of a file that
would otherwise be rendered inaccessible.
.Sp
This parameter is optional.
.IP "\fBround\-down=\fRN" 4
.IX Item "round-down=N"
Round the size down to a multiple of \f(CW\*(C`N\*(C'\fR bytes.  If the size of the
underlying plugin is already a multiple of \f(CW\*(C`N\*(C'\fR bytes, this has no
effect.
.Sp
This parameter is optional.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Serve a file as if it were a block device that insists on 4k
alignment, while still allowing access to any unaligned bytes at the
end of the file:
.PP
.Vb 2
\& nbdkit \-\-filter=blocksize \-\-filter=truncate file /path/to/file \e
\& minblock=4k round\-up=4k
.Ve
.SH "FILES"
.IX Header "FILES"
.IP "\fI\f(CI$filterdir\fI/nbdkit\-truncate\-filter.so\fR" 4
.IX Item "$filterdir/nbdkit-truncate-filter.so"
The filter.
.Sp
Use \f(CW\*(C`nbdkit \-\-dump\-config\*(C'\fR to find the location of \f(CW$filterdir\fR.
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW\*(C`nbdkit\-truncate\-filter\*(C'\fR first appeared in nbdkit 1.6.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInbdkit\fR\|(1),
\&\fInbdkit\-file\-plugin\fR\|(1),
\&\fInbdkit\-filter\fR\|(3),
\&\fInbdkit\-blocksize\-filter\fR\|(1),
\&\fInbdkit\-cache\-filter\fR\|(1),
\&\fInbdkit\-cow\-filter\fR\|(1),
\&\fInbdkit\-offset\-filter\fR\|(1),
\&\fInbdkit\-partition\-filter\fR\|(1).
.SH "AUTHORS"
.IX Header "AUTHORS"
Richard W.M. Jones
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2018 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:
.IP "\(bu" 4
Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
.IP "\(bu" 4
Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
.IP "\(bu" 4
Neither the name of Red Hat nor the names of its contributors may be
used to endorse or promote products derived from this software without
specific prior written permission.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS\s0 ''\s-1AS IS\s0'' \s-1AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\s0 (\s-1INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\s0; \s-1LOSS OF
USE, DATA, OR PROFITS\s0; \s-1OR BUSINESS INTERRUPTION\s0) \s-1HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT\s0 (\s-1INCLUDING NEGLIGENCE OR OTHERWISE\s0) \s-1ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.\s0
