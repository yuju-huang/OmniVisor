.\" Automatically generated by Podwrapper::Man 1.21.8 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "nbdkit-nozero-filter 1"
.TH nbdkit-nozero-filter 1 "2020-06-10" "nbdkit-1.21.8" "NBDKIT"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nbdkit\-nozero\-filter \- nbdkit nozero filter
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& nbdkit \-\-filter=nozero plugin [plugin\-args...] \e
\&   [zeromode=MODE] [fastzeromode=MODE]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`nbdkit\-nozero\-filter\*(C'\fR is a filter that intentionally disables
efficient handling of sparse file holes (ranges of all-zero bytes)
across the \s-1NBD\s0 protocol.  It is mainly useful for evaluating timing
differences between naive vs. sparse-aware connections, and for
testing client or server fallbacks.
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.IP "\fBzeromode=none\fR" 4
.IX Item "zeromode=none"
.PD 0
.IP "\fBzeromode=emulate\fR" 4
.IX Item "zeromode=emulate"
.IP "\fBzeromode=notrim\fR" 4
.IX Item "zeromode=notrim"
.IP "\fBzeromode=plugin\fR" 4
.IX Item "zeromode=plugin"
.PD
Optional, controls which mode the filter will use.  Mode \fBnone\fR
(default) means that zero support is not advertised to the
client. Mode \fBemulate\fR means that zero support is emulated by the
filter using the plugin's \f(CW\*(C`pwrite\*(C'\fR callback, regardless of whether
the plugin itself implemented the \f(CW\*(C`zero\*(C'\fR callback with a more
efficient way to write zeros. Since nbdkit ≥ 1.13.4, mode
\&\fBnotrim\fR means that zero requests are forwarded on to the plugin,
except that the plugin will never see the \s-1NBDKIT_MAY_TRIM\s0 flag, to
determine if the client permitting trimming during zero operations
makes a difference.  Since nbdkit ≥ 1.15.0, mode \fBplugin\fR leaves
normal zero requests up to the plugin, useful when combined with
\&\f(CW\*(C`fastzeromode\*(C'\fR for experimenting with the effects of fast zero
requests.  It is an error to request \fBnotrim\fR or \fBplugin\fR if the
plugin does not support the \f(CW\*(C`zero\*(C'\fR callback.
.IP "\fBfastzeromode=none\fR" 4
.IX Item "fastzeromode=none"
.PD 0
.IP "\fBfastzeromode=slow\fR" 4
.IX Item "fastzeromode=slow"
.IP "\fBfastzeromode=ignore\fR" 4
.IX Item "fastzeromode=ignore"
.IP "\fBfastzeromode=default\fR" 4
.IX Item "fastzeromode=default"
.PD
Optional since nbdkit ≥ 1.15.0, controls whether fast zeroes are
advertised to the client, and if so, how the filter will react to a
client fast zero request.  Mode \fBnone\fR avoids advertising fast zero
support.  Mode \fBslow\fR advertises fast zero support unconditionally,
but treats all fast zero requests as an immediate \f(CW\*(C`ENOTSUP\*(C'\fR failure
rather than performing a fallback.  Mode \fBignore\fR advertises fast
zero support, but treats all client fast zero requests as if the flag
had not been used (this behavior is typically contrary to the \s-1NBD\s0
specification, but can be useful for comparison against the actual
fast zero implementation to see if fast zeroes make a difference).
Mode \fBdefault\fR is selected by default; when paired with
\&\f(CW\*(C`zeromode=emulate\*(C'\fR, fast zeroes are advertised but fast zero requests
always fail (similar to \f(CW\*(C`slow\*(C'\fR); when paired with \f(CW\*(C`zeromode=notrim\*(C'\fR
or \f(CW\*(C`zeromode=plugin\*(C'\fR, fast zero support is left to the plugin
(although in the latter case, the nozero filter could be omitted for
the same behavior).
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Serve the file \fIdisk.img\fR, but force the client to write zeroes
explicitly rather than with \f(CW\*(C`NBD_CMD_WRITE_ZEROES\*(C'\fR:
.PP
.Vb 1
\& nbdkit \-\-filter=nozero file disk.img
.Ve
.PP
Serve the file \fIdisk.img\fR, allowing the client to take advantage of
less network traffic via \f(CW\*(C`NBD_CMD_WRITE_ZEROES\*(C'\fR, but fail any fast
zero requests up front and force all other zero requests to write data
explicitly rather than punching any holes:
.PP
.Vb 1
\& nbdkit \-\-filter=nozero file zeromode=emulate disk.img
.Ve
.PP
Serve the file \fIdisk.img\fR, but do not advertise fast zero support to
the client even if the plugin supports it:
.PP
.Vb 1
\& nbdkit \-\-filter=nozero file zeromode=plugin fastzeromode=none disk.img
.Ve
.SH "FILES"
.IX Header "FILES"
.IP "\fI\f(CI$filterdir\fI/nbdkit\-nozero\-filter.so\fR" 4
.IX Item "$filterdir/nbdkit-nozero-filter.so"
The filter.
.Sp
Use \f(CW\*(C`nbdkit \-\-dump\-config\*(C'\fR to find the location of \f(CW$filterdir\fR.
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW\*(C`nbdkit\-nozero\-filter\*(C'\fR first appeared in nbdkit 1.2.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInbdkit\fR\|(1),
\&\fInbdkit\-file\-plugin\fR\|(1),
\&\fInbdkit\-filter\fR\|(3),
\&\fInbdkit\-fua\-filter\fR\|(1),
\&\fInbdkit\-nocache\-filter\fR\|(1),
\&\fInbdkit\-noparallel\-filter\fR\|(1),
\&\fInbdkit\-noextents\-filter\fR\|(1).
.SH "AUTHORS"
.IX Header "AUTHORS"
Eric Blake
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2018\-2020 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:
.IP "\(bu" 4
Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
.IP "\(bu" 4
Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
.IP "\(bu" 4
Neither the name of Red Hat nor the names of its contributors may be
used to endorse or promote products derived from this software without
specific prior written permission.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS\s0 ''\s-1AS IS\s0'' \s-1AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\s0 (\s-1INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\s0; \s-1LOSS OF
USE, DATA, OR PROFITS\s0; \s-1OR BUSINESS INTERRUPTION\s0) \s-1HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT\s0 (\s-1INCLUDING NEGLIGENCE OR OTHERWISE\s0) \s-1ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.\s0
