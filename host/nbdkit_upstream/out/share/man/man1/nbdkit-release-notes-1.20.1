.\" Automatically generated by Podwrapper::Man 1.21.8 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "nbdkit-release-notes-1.20 1"
.TH nbdkit-release-notes-1.20 1 "2020-06-10" "nbdkit-1.21.8" "NBDKIT"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nbdkit\-release\-notes\-1.20 \- release notes for nbdkit 1.20
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
These are the release notes for nbdkit stable release 1.20.
This describes the major changes since 1.18.
.PP
nbdkit 1.20.0 was released on \fB2nd May 2020\fR.
.SS "Security"
.IX Subsection "Security"
There were no security issues found.  All past security issues and
information about how to report new ones can be found in
\&\fInbdkit\-security\fR\|(1).
.SS "Plugins"
.IX Subsection "Plugins"
New \fInbdkit\-tmpdisk\-plugin\fR\|(1) is a scriptable “remote tmpfs” for
creating temporary filesystems (eg. for thin clients), and also for
blank or prepopulated temporary disks.
.PP
\&\fInbdkit\-data\-plugin\fR\|(1) now has support for prepopulating disks with
more complex test patterns such as repeated sequences of bytes.
.PP
\&\fInbdkit\-curl\-plugin\fR\|(1) now supports setting a proxy, enabling \s-1TCP\s0
keepalives, and disabling Nagle’s algorithm.
.PP
\&\fInbdkit\-perl\-plugin\fR\|(1) now supports \s-1API\s0 version 2.  In particular
the full \s-1NBD\s0 client flags are visible to plugins, along with support
for the \f(CW\*(C`.get_ready\*(C'\fR callback.  Also there is a new function
\&\f(CW\*(C`Nbdkit::debug\*(C'\fR which is a wrapper around the \f(CW\*(C`nbdkit_debug\*(C'\fR \s-1API.\s0
.PP
\&\fInbdkit\-vddk\-plugin\fR\|(1) drops support for \s-1VDDK 5.1.1.\s0  This version
was last updated in 2014 and is no longer supported by VMware.  Since
this was the last version of \s-1VDDK\s0 to support i686, 32\-bit support is
also dropped (Eric Blake).
.SS "Language bindings"
.IX Subsection "Language bindings"
Plugins may now be written in Golang, see \fInbdkit\-golang\-plugin\fR\|(3)
(thanks Dan Berrangé, James Shubin).
.PP
OCaml plugins can now access \f(CW\*(C`nbdkit_realpath\*(C'\fR, \f(CW\*(C`nbdkit_nanosleep\*(C'\fR,
\&\f(CW\*(C`nbdkit_export_name\*(C'\fR and \f(CW\*(C`nbdkit_shutdown\*(C'\fR.
.PP
Python plugins now transparently support fail-fast zero (Eric Blake).
.SS "Filters"
.IX Subsection "Filters"
New \fInbdkit\-exitlast\-filter\fR\|(1) causes nbdkit to exit after the last
client connection.
.PP
New \fInbdkit\-limit\-filter\fR\|(1) allows you to limit the number of
clients which can simultaneously connect to any plugin.
.SS "Server"
.IX Subsection "Server"
The \fI\-\-run\fR option now waits for the nbdkit plugin and nbdkit to exit
before returning to the caller.  This allows for more predictable
clean up in shell scripts using this feature.
.PP
nbdkit \fI\-\-dump\-config\fR output now includes separate lines for
\&\f(CW\*(C`version_major\*(C'\fR and \f(CW\*(C`version_minor\*(C'\fR, making it easier to find out
from shell scripts which version of nbdkit is installed.
.PP
nbdkit \fI\-s\fR option (which connects to the client over stdin/stdout)
now rejects various options that would also try to read from or write
to stdin/stdout, for example \fI\-\-dump\-plugin\fR or \f(CW\*(C`password=\-\*(C'\fR
(Eric Blake).
.SS "\s-1API\s0"
.IX Subsection "API"
New \f(CW\*(C`nbdkit_shutdown\*(C'\fR call which allows plugins to ask for nbdkit
to exit.  This is used to implement the new \f(CW\*(C`exitlast\*(C'\fR filter.
.PP
New \f(CW\*(C`nbdkit_stdio_safe\*(C'\fR call allows plugins to check if reading from
stdin or writing to stdout is safe, eg. if it is safe to read
passwords interactively (Eric Blake).
.PP
\&\f(CW\*(C`can_*\*(C'\fR callbacks which return booleans can return any value ≥ 1
to mean true.  Previous versions of nbdkit had inconsistent behaviour
if plugins returned anything other than 1 for true (Eric Blake).
.SS "Bug fixes"
.IX Subsection "Bug fixes"
\&\fInbdkit\-tar\-plugin\fR\|(1) now works and there is a regression test for
it.
.PP
\&\fInbdkit\-curl\-plugin\fR\|(1) \f(CW\*(C`\-D curl.version=1\*(C'\fR option now works.
.PP
Fixed a rare hang when closing a connection in \fInbdkit\-nbd\-plugin\fR\|(1)
(Eric Blake).
.PP
Fix compilation on certain platforms with clang (Khem Raj).
.PP
Don’t leak \f(CW$tmpdir\fR from \fInbdkit\-sh\-plugin\fR\|(1) into the \fI\-\-run\fR
subcommand.
.PP
nbdkit now correctly sets \f(CW\*(C`FD_CLOEXEC\*(C'\fR when using systemd socket
activation (Eric Blake).
.SS "Documentation"
.IX Subsection "Documentation"
The \fInbdkit\-plugin\fR\|(3) man page has been overhauled completely to
make it easier to follow.  Also we now have documentation for how to
compile plugins in various environments which was missing before.
.SS "Tests"
.IX Subsection "Tests"
All valgrind tests now pass.
.PP
“Old plugin” tests were added for v1.18.2 on x86\-64, and a variety of
old plugins compiled on i686.  The i686 plugins will allow us to test
for regressions in 32 bit support.
.PP
Tests of the nbd plugin should now be stable (Eric Blake).
.PP
There is an additional test combining the offset and truncate filters,
which tests several corner cases as well as providing tests of error
handling between layers.
.SS "Build"
.IX Subsection "Build"
\&\fInbdkit\-nbd\-plugin\fR\|(1) now requires libnbd.  (If libnbd is not
present at build time then this plugin is not built).  The fallback
code in this plugin which made \s-1NBD\s0 connections by constructing \s-1NBD\s0
command packets without using libnbd has been removed (Eric Blake).
.PP
\&\fIscripts/git.orderfile\fR has been improved so that commands like
\&\f(CW\*(C`git diff\*(C'\fR and \f(CW\*(C`git show\*(C'\fR display OCaml sources in a natural
order with interface first followed by implementation.
.PP
Various fixes for MinGW.  Note MinGW / \s-1MSYS\s0 support is a work in
progress and not finished yet (Frank Gu).
.PP
Multiple fixes to Haiku build.
.PP
\&\fIawk\fR\|(1) is no longer required to run the tests.  It was a “hidden”
required dependency, but all use of it has now been eliminated.
.SS "Internals"
.IX Subsection "Internals"
There is now an internal utility library for creating vectors/lists of
objects, for example lists of strings (\fIcommon/utils/vector.h\fR).  It
is widely used by the server, plugins and filters.
.PP
\&\fI\s-1README\s0\fR discusses how to use \fIlcov\fR\|(1) for code coverage reports.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInbdkit\fR\|(1).
.SH "AUTHORS"
.IX Header "AUTHORS"
Authors of nbdkit 1.20:
.IP "Eric Blake" 4
.IX Item "Eric Blake"
(33 commits)
.IP "Khem Raj" 4
.IX Item "Khem Raj"
(1 commit)
.IP "Richard W.M. Jones" 4
.IX Item "Richard W.M. Jones"
(134 commits)
.IP "Frank Gu" 4
.IX Item "Frank Gu"
(6 commits)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:
.IP "\(bu" 4
Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
.IP "\(bu" 4
Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
.IP "\(bu" 4
Neither the name of Red Hat nor the names of its contributors may be
used to endorse or promote products derived from this software without
specific prior written permission.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS\s0 ''\s-1AS IS\s0'' \s-1AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\s0 (\s-1INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\s0; \s-1LOSS OF
USE, DATA, OR PROFITS\s0; \s-1OR BUSINESS INTERRUPTION\s0) \s-1HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT\s0 (\s-1INCLUDING NEGLIGENCE OR OTHERWISE\s0) \s-1ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.\s0
