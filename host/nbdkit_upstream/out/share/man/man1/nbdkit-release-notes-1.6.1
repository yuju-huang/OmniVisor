.\" Automatically generated by Podwrapper::Man 1.21.8 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "nbdkit-release-notes-1.6 1"
.TH nbdkit-release-notes-1.6 1 "2020-06-10" "nbdkit-1.21.8" "NBDKIT"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nbdkit\-release\-notes\-1.6 \- release notes for nbdkit 1.6
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
These are the release notes for nbdkit stable release 1.6.
This describes the major changes since 1.4.
.PP
nbdkit 1.6.0 was released on 28th August 2018.
.SS "New features"
.IX Subsection "New features"
.IP "\(bu" 4
You can now write plugins in the Lua scripting language, see
\&\fInbdkit\-lua\-plugin\fR\|(3).
.IP "\(bu" 4
nbdkit and common plugins are now \*(L"63 bit clean\*(R": the maximum disk
size supported is 2⁶³\-1 bytes, and the core server and plugins now
have additional tests to check this works, even on 32 bit machines.
.IP "\(bu" 4
Multiple improvements to the \fInbdkit\-file\-plugin\fR\|(1) to make zeroing
and trimming perform better, work correctly with block devices, and
work on older Linux kernels [Nir Soffer, Eric Blake].
.IP "\(bu" 4
New \fInbdkit\-pattern\-plugin\fR\|(1) generates a simple, fixed test pattern
for testing nbdkit filters and \s-1NBD\s0 clients.
.IP "\(bu" 4
New \fInbdkit\-truncate\-filter\fR\|(1) can: truncate or extend the size of
plugins, or round up or down the size to next multiple of a power of
2.  Useful for \s-1NBD\s0 clients like qemu which can only handle \s-1NBD\s0 sizes
which are a multiple of 512 bytes.
.IP "\(bu" 4
New \fInbdkit\-error\-filter\fR\|(1) which can be used to inject errors into
the protocol for testing how clients can handle and recover from
errors.
.IP "\(bu" 4
New \fInbdkit\-data\-plugin\fR\|(1) allows you to specify (small) disk images
directly on the command line.
.IP "\(bu" 4
Enhanced error reporting in the Python plugin so full tracebacks
from errors are now displayed instead of being lost as before.
.IP "\(bu" 4
\&\f(CW\*(C`NBD_OPT_GO\*(C'\fR now supported, so we can return errors when negotiating
the export name.
.IP "\(bu" 4
Support for logging error messages to syslog.
.IP "\(bu" 4
nbdkit can now be compiled with Clang (as well as \s-1GCC\s0).
.IP "\(bu" 4
nbdkit can now be compiled on FreeBSD.
.IP "\(bu" 4
\&\fInbdkit\-vddk\-plugin\fR\|(1) is compiled unconditionally.  You no longer
need to install the proprietary \s-1VDDK\s0 to compile it.
.IP "\(bu" 4
Debug messages now include the name of the filter when invoked from
a filter context.
.IP "\(bu" 4
Debug flags (\fI\-D\fR option) provides lightweight debugging for plugin
authors.
.SS "Acknowledgements"
.IX Subsection "Acknowledgements"
Thanks to all who contributed, especially Nir Soffer and Eric Blake.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInbdkit\fR\|(1),
https://www.redhat.com/archives/libguestfs/2018\-August/msg00279.html.
.SH "AUTHORS"
.IX Header "AUTHORS"
Eric Blake
.PP
Richard W.M. Jones
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2018 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:
.IP "\(bu" 4
Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
.IP "\(bu" 4
Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
.IP "\(bu" 4
Neither the name of Red Hat nor the names of its contributors may be
used to endorse or promote products derived from this software without
specific prior written permission.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS\s0 ''\s-1AS IS\s0'' \s-1AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\s0 (\s-1INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\s0; \s-1LOSS OF
USE, DATA, OR PROFITS\s0; \s-1OR BUSINESS INTERRUPTION\s0) \s-1HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT\s0 (\s-1INCLUDING NEGLIGENCE OR OTHERWISE\s0) \s-1ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.\s0
