.\" Automatically generated by Podwrapper::Man 1.21.8 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "nbdkit-ddrescue-filter 1"
.TH nbdkit-ddrescue-filter 1 "2020-06-10" "nbdkit-1.21.8" "NBDKIT"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nbdkit\-ddrescue\-filter \- nbdkit filter for serving from ddrescue dump
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& nbdkit \-\-filter=ddrescue plugin [plugin\-args...]
\&                                 ddrescue\-mapfile=file.map
\&
\& nbdkit \-\-filter=ddrescue file file=file.img ddrescue\-mapfile=file.map
\&                               [plugin\-args...]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`nbdkit\-ddrescue\-filter\*(C'\fR is a filter for \fInbdkit\fR\|(1) which overlays
bad blocks according to a \s-1GNU\s0 \fIddrescue\fR\|(1) mapfile.  This is mainly useful
for testing disk images recovered with ddrescue, to detect which files
or filesystem structures are impacted, or attempting fsck on them.
.PP
Note that the current implementation is read-only.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.IP "Expose a rescued disk image with detected bad sectors:" 4
.IX Item "Expose a rescued disk image with detected bad sectors:"
.Vb 1
\& nbdkit \-\-filter=ddrescue file file=disk.img ddrescue\-mapfile=disk.map
.Ve
.Sp
The above command serves the disk image disk.img and maps the bad
sectors listed in disk.img so that read attempts on them do not return
a valid block full of zeroes.
.SH "PARAMETERS"
.IX Header "PARAMETERS"
The \f(CW\*(C`ddrescue\-mapfile\*(C'\fR parameter must point to a valid \s-1GNU\s0 ddrescue
mapfile.
.SH "DATA FORMAT"
.IX Header "DATA FORMAT"
The file pointed to by the \f(CW\*(C`ddrescue\-mapfile\*(C'\fR parameter should
conform to the format of a \s-1GNU\s0 \fIddrescue\fR\|(1) mapfile.
.SH "FILES"
.IX Header "FILES"
.IP "\fI\f(CI$filterdir\fI/nbdkit\-ddrescue\-filter.so\fR" 4
.IX Item "$filterdir/nbdkit-ddrescue-filter.so"
The filter.
.Sp
Use \f(CW\*(C`nbdkit \-\-dump\-config\*(C'\fR to find the location of \f(CW$filterdir\fR.
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW\*(C`nbdkit\-ddrescue\-filter\*(C'\fR first appeared in nbdkit 1.22.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInbdkit\fR\|(1),
\&\fInbdkit\-file\-plugin\fR\|(1),
\&\fInbdkit\-filter\fR\|(3),
\&\fIddrescue\fR\|(1),
https://www.gnu.org/software/ddrescue/manual/ddrescue_manual.html.
.SH "AUTHORS"
.IX Header "AUTHORS"
François Revol
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 François Revol
.SH "LICENSE"
.IX Header "LICENSE"
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:
.IP "\(bu" 4
Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
.IP "\(bu" 4
Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
.IP "\(bu" 4
Neither the name of Red Hat nor the names of its contributors may be
used to endorse or promote products derived from this software without
specific prior written permission.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS\s0 ''\s-1AS IS\s0'' \s-1AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\s0 (\s-1INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\s0; \s-1LOSS OF
USE, DATA, OR PROFITS\s0; \s-1OR BUSINESS INTERRUPTION\s0) \s-1HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT\s0 (\s-1INCLUDING NEGLIGENCE OR OTHERWISE\s0) \s-1ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.\s0
