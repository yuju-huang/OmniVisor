.\" Automatically generated by Podwrapper::Man 1.21.8 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "nbdkit-release-notes-1.16 1"
.TH nbdkit-release-notes-1.16 1 "2020-06-10" "nbdkit-1.21.8" "NBDKIT"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nbdkit\-release\-notes\-1.16 \- release notes for nbdkit 1.16
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
These are the release notes for nbdkit stable release 1.16.
This describes the major changes since 1.14.
.PP
nbdkit 1.16.0 was released on 14th November 2019.
.SS "Security"
.IX Subsection "Security"
Two security issues were found during development of nbdkit 1.16.
Fixes for these were backported to older stable branches.  Upgrading
to the fixed versions is highly recommended.  The new
\&\fInbdkit\-security\fR\|(1) man page contains an up to date list of past
security issues.
.PP
\fI\s-1CVE\-2019\-14850\s0 denial of service due to premature opening of back-end connection\fR
.IX Subsection "CVE-2019-14850 denial of service due to premature opening of back-end connection"
.PP
See the full announcement and links to mitigation, tests and fixes
here:
https://www.redhat.com/archives/libguestfs/2019\-September/msg00084.html
.PP
\fI\s-1CVE\-2019\-14851\s0 assertion failure by issuing commands in the wrong order\fR
.IX Subsection "CVE-2019-14851 assertion failure by issuing commands in the wrong order"
.PP
This \s-1CVE\s0 was caused by the fix to the previous issue.
.PP
See the full announcement and links to mitigation, tests and fixes
here:
https://www.redhat.com/archives/libguestfs/2019\-September/msg00272.html
.SS "New features"
.IX Subsection "New features"
Add support for fast zeroing.  Plugins can expose this using the new
\&\f(CW\*(C`.can_fast_zero\*(C'\fR method (Eric Blake).
.PP
\&\fInbdkit\-partitioning\-plugin\fR\|(1) allows use of \f(CW\*(C`mbr\-id=default\*(C'\fR or
\&\f(CW\*(C`type\-guid=default\*(C'\fR to go back to the default \s-1MBR\s0 byte or partition
type \s-1GUID.\s0
.PP
New \fI\-\-mask\-handshake\fR server flag can be used for testing client
feature negotiation (Eric Blake).
.PP
The client export name is passed to \fInbdkit\-captive\fR\|(1) \fI\-\-run\fR
parameter as \f(CW$exportname\fR (Eric Blake).
.PP
Captive \fI\-\-run\fR commands which fail (eg. aborting) now cause nbdkit
to exit with an error instead of errors being silently ignored (Eric
Blake).
.PP
File descriptors can be passed to password parameters, eg:
\&\f(CW\*(C`password=\-3\*(C'\fR which means that the password should be read from file
descriptor 3.
.PP
nbdkit can now serve over the \f(CW\*(C`AF_VSOCK\*(C'\fR protocol (thanks Stefan
Hajnoczi).
.PP
New \fI\-\-log=null\fR option discards error messages.
.SS "Plugins"
.IX Subsection "Plugins"
Python 2 support has been \fBdropped\fR from \fInbdkit\-python\-plugin\fR\|(3)
in line with Python 2 end of life at the beginning of 2020.  Python
≥ 3.3 is required by this plugin.  If you wish to continue to use
Python 2 then you will need to use nbdkit 1.14.
.PP
New \fInbdkit\-info\-plugin\fR\|(1) which returns various server information
back to the client.  It can be used for testing server latency amongst
other things.
.PP
\&\fInbdkit\-data\-plugin\fR\|(1) now allows you to write \f(CW\*(C`BYTE*N\*(C'\fR to get
repeated bytes (eg. \f(CW\*(C`nbdkit data data="0x55*4096"\*(C'\fR).
.PP
\&\fInbdkit\-ssh\-plugin\fR\|(1) new parameter \f(CW\*(C`compression=true|false\*(C'\fR to
control transport compression.
.PP
\&\fInbdkit\-vddk\-plugin\fR\|(1) is no longer compiled on non\-x86 platforms
since VMware has only ever shipped \s-1VDDK\s0 on x86.
.PP
\&\fInbdkit\-sh\-plugin\fR\|(1) scripts can now see the client exportname and
can use the \f(CW\*(C`magic_config_key\*(C'\fR feature.
.SS "Filters"
.IX Subsection "Filters"
New \fInbdkit\-retry\-filter\fR\|(1) which can reopen the plugin
transparently on certain types of failures (lots of help from Eric
Blake).
.SS "\s-1API\s0"
.IX Subsection "API"
Macros \f(CW\*(C`NBDKIT_VERSION_MAJOR\*(C'\fR, \f(CW\*(C`NBDKIT_VERSION_MINOR\*(C'\fR,
\&\f(CW\*(C`NBDKIT_VERSION_MICRO\*(C'\fR expose the compile-time version of nbdkit to
plugins and filters (Eric Blake).
.PP
Filters (which unlike plugins do \fInot\fR have a public stable \s-1API\s0) must
now exactly match the version of nbdkit when loaded (Eric Blake).
.PP
New \f(CW\*(C`.can_fast_zero\*(C'\fR method (Eric Blake).
.PP
New \f(CW\*(C`nbdkit_export_name\*(C'\fR server function for reading the export name
passed by the client.
.PP
New \f(CW\*(C`nbdkit_peer_name\*(C'\fR server function to return the client address
(like \fIgetpeername\fR\|(2)).
.PP
New server functions for safely parsing integers: \f(CW\*(C`nbdkit_parse_int\*(C'\fR,
\&\f(CW\*(C`nbdkit_parse_unsigned\*(C'\fR, \f(CW\*(C`nbdkit_parse_int8_t\*(C'\fR,
\&\f(CW\*(C`nbdkit_parse_uint8_t\*(C'\fR, \f(CW\*(C`nbdkit_parse_int16_t\*(C'\fR,
\&\f(CW\*(C`nbdkit_parse_uint16_t\*(C'\fR, \f(CW\*(C`nbdkit_parse_int32_t\*(C'\fR,
\&\f(CW\*(C`nbdkit_parse_uint32_t\*(C'\fR, \f(CW\*(C`nbdkit_parse_int64_t\*(C'\fR,
\&\f(CW\*(C`nbdkit_parse_uint64_t\*(C'\fR.
.SS "Bug fixes"
.IX Subsection "Bug fixes"
\&\f(CW\*(C`.trim\*(C'\fR with \s-1FUA\s0 flag set now works (Eric Blake).
.SS "Documentation"
.IX Subsection "Documentation"
The previous release notes have been turned into man pages.
.SS "Tests"
.IX Subsection "Tests"
Several tests now optionally use \fInbdsh\fR\|(1) instead of qemu-io.
.PP
You can now fuzz nbdkit using either American Fuzzy Lop or clang’s
libFuzzer.
.PP
Several tests have had sleep times increased to make them more stable
when run on slow or heavily loaded machines.
.SS "Internals"
.IX Subsection "Internals"
Reproducible builds (Chris Lamb).
.PP
Compile code with \fI\-Wshadow\fR warning (Eric Blake).
.PP
The internal backend system has been extensively overhauled.  In
particular this means that we now validate request ranges as requests
are passed between filters and down to the plugin, making it easier to
find bugs in filters early (Eric Blake).
.PP
Plugin size and \f(CW\*(C`can_*\*(C'\fR flags are cached more aggressively by the
server (Eric Blake).
.PP
Variable Length Arrays (VLAs) on stack are now banned throughout the
code.
.PP
The \fInbd\-protocol.h\fR header describing the \s-1NBD\s0 protocol is now shared
with \fIlibnbd\fR\|(3).
.PP
Plugin \f(CW\*(C`.unload\*(C'\fR method is now called after all worker threads have
exited, avoiding races at server shutdown.
.PP
Code was audited using Coverity and various problems were fixed.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInbdkit\fR\|(1).
.SH "AUTHORS"
.IX Header "AUTHORS"
Eric Blake
.PP
Richard W.M. Jones
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2019 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:
.IP "\(bu" 4
Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
.IP "\(bu" 4
Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
.IP "\(bu" 4
Neither the name of Red Hat nor the names of its contributors may be
used to endorse or promote products derived from this software without
specific prior written permission.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS\s0 ''\s-1AS IS\s0'' \s-1AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\s0 (\s-1INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\s0; \s-1LOSS OF
USE, DATA, OR PROFITS\s0; \s-1OR BUSINESS INTERRUPTION\s0) \s-1HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT\s0 (\s-1INCLUDING NEGLIGENCE OR OTHERWISE\s0) \s-1ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.\s0
