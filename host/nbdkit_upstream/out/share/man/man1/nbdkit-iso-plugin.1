.\" Automatically generated by Podwrapper::Man 1.21.8 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "nbdkit-iso-plugin 1"
.TH nbdkit-iso-plugin 1 "2020-06-10" "nbdkit-1.21.8" "NBDKIT"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nbdkit\-iso\-plugin \- create virtual ISO (CD\-ROM) from directory
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& nbdkit iso [dir=]DIRECTORY [[dir=]DIRECTORY ...]
\&            [prog=mkisofs] [params=\*(Aq\-JrT\*(Aq]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`nbdkit\-iso\-plugin\*(C'\fR is a plugin for \fInbdkit\fR\|(1) which creates a
virtual \s-1ISO\s0 (CD-ROM) image from a directory on the fly.  The files
from \fI\s-1DIRECTORY\s0\fR are added to a virtual \s-1ISO\s0 image which is served
read-only over the \s-1NBD\s0 protocol.
.PP
This plugin uses \fIgenisoimage\fR\|(1) or \fImkisofs\fR\|(1) to create the \s-1ISO\s0
content.
.PP
To create a FAT-formatted virtual floppy disk instead of a \s-1CD,\s0 see
\&\fInbdkit\-floppy\-plugin\fR\|(1).  To create a Linux compatible virtual
disk, see \fInbdkit\-linuxdisk\-plugin\fR\|(1).
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Create a virtual \s-1ISO\s0 which supports Joliet, Rock Ridge and \s-1TRANS.TBL\s0
extensions, from files in a directory:
.PP
.Vb 1
\& nbdkit iso /path/to/directory params=\*(Aq\-JrT\*(Aq
.Ve
.PP
\&\f(CW\*(C`params\*(C'\fR adds \fI\-JrT\fR to the \fIgenisoimage\fR\|(1) or \fImkisofs\fR\|(1)
command line, specifying the required extensions.  Note that unless
you use at least one of these extensions, filenames inside the \s-1ISO\s0
will be truncated because of limitations of the basic \s-1ISOÂ 9660\s0
format.
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.IP "[\fBdir=\fR]DIRECTORY" 4
.IX Item "[dir=]DIRECTORY"
Specify the directory containing files and subdirectories which will
be added to the virtual \s-1ISO.\s0  Files inside this directory will appear
in the root directory of the \s-1ISO.\s0
.Sp
This parameter is required and may be specified one or more times.  If
multiple directories are specified, they are merged together.
.Sp
\&\f(CW\*(C`dir=\*(C'\fR is a magic config key and may be omitted in most cases.
See \*(L"Magic parameters\*(R" in \fInbdkit\fR\|(1).
.IP "\fBparams=\fR'parameters ...'" 4
.IX Item "params='parameters ...'"
Any other parameters may be passed through to \fIgenisoimage\fR\|(1) or
\&\fImkisofs\fR\|(1) by specifying this option.
.Sp
For example:
.Sp
.Vb 1
\& params=\*(Aq\-JrT \-V "My Disk Image"\*(Aq
.Ve
.Sp
would specify Joliet (\fI\-J\fR), Rock Ridge (\fI\-r\fR) and \s-1TRANS.TBL\s0 (\fI\-T\fR)
extensions, and specify the volume \s-1ID\s0 (\fI\-V\fR) as \f(CW\*(C`My Disk Image\*(C'\fR.
.Sp
Take care when quoting this parameter; nbdkit passes the resulting
string through another layer of shell interpretation without any
sanity checks for unquoted shell metacharacters.
.IP "\fBprog=\fRmkisofs" 4
.IX Item "prog=mkisofs"
Choose which program to use to create the \s-1ISO\s0 content.  The default is
either \fIgenisoimage\fR\|(1) or \fImkisofs\fR\|(1) and is picked when nbdkit is
compiled.  You only need to use this parameter if you want to override
it at run time.
.SH "ENVIRONMENT VARIABLES"
.IX Header "ENVIRONMENT VARIABLES"
.ie n .IP """PATH""" 4
.el .IP "\f(CWPATH\fR" 4
.IX Item "PATH"
\&\fIgenisoimage\fR\|(1), \fImkisofs\fR\|(1) or whatever you supply to the
optional \f(CW\*(C`prog\*(C'\fR parameter must be available on the \f(CW$PATH\fR.
.ie n .IP """TMPDIR""" 4
.el .IP "\f(CWTMPDIR\fR" 4
.IX Item "TMPDIR"
A temporary copy of the \s-1ISO\s0 is created in \f(CW\*(C`TMPDIR\*(C'\fR.  If this
environment variable is not set then \fI/var/tmp\fR is used instead.
There must be enough free space here to store the \s-1ISO,\s0 which might be
quite large.
.SH "FILES"
.IX Header "FILES"
.IP "\fI\f(CI$plugindir\fI/nbdkit\-iso\-plugin.so\fR" 4
.IX Item "$plugindir/nbdkit-iso-plugin.so"
The plugin.
.Sp
Use \f(CW\*(C`nbdkit \-\-dump\-config\*(C'\fR to find the location of \f(CW$plugindir\fR.
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW\*(C`nbdkit\-iso\-plugin\*(C'\fR first appeared in nbdkit 1.8.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInbdkit\fR\|(1),
\&\fInbdkit\-plugin\fR\|(3),
\&\fInbdkit\-file\-plugin\fR\|(1),
\&\fInbdkit\-floppy\-plugin\fR\|(1),
\&\fInbdkit\-linuxdisk\-plugin\fR\|(1),
\&\fIgenisoimage\fR\|(1),
\&\fImkisofs\fR\|(1).
.SH "AUTHORS"
.IX Header "AUTHORS"
Richard W.M. Jones
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2018 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:
.IP "\(bu" 4
Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
.IP "\(bu" 4
Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
.IP "\(bu" 4
Neither the name of Red Hat nor the names of its contributors may be
used to endorse or promote products derived from this software without
specific prior written permission.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS\s0 ''\s-1AS IS\s0'' \s-1AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\s0 (\s-1INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\s0; \s-1LOSS OF
USE, DATA, OR PROFITS\s0; \s-1OR BUSINESS INTERRUPTION\s0) \s-1HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT\s0 (\s-1INCLUDING NEGLIGENCE OR OTHERWISE\s0) \s-1ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.\s0
