.\" Automatically generated by Podwrapper::Man 1.21.8 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "nbdkit-release-notes-1.12 1"
.TH nbdkit-release-notes-1.12 1 "2020-06-10" "nbdkit-1.21.8" "NBDKIT"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nbdkit\-release\-notes\-1.12 \- release notes for nbdkit 1.12
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
These are the release notes for nbdkit stable release 1.12.
This describes the major changes since 1.10.
.PP
nbdkit 1.12.0 was released on 10th April 2019.
.SS "New features"
.IX Subsection "New features"
New \fInbdkit\-ssh\-plugin\fR\|(1) which lets you turn any disk image on a
remote Unix server accessible by ssh into an \s-1NBD\s0 source.
.PP
New \fInbdkit\-rate\-filter\fR\|(1) for bandwidth-limiting connections.
Either single connections or the whole server can be
bandwidth-limited, and the limit can be dynamically changed at
runtime.
.PP
New \fInbdkit\-readahead\-filter\fR\|(1) improves performance when reading
sequentially from plugins with a high request overhead like curl.
.PP
New \fInbdkit\-linuxdisk\-plugin\fR\|(1) lets you create complete ext2, ext3
or ext4 filesystems in a \s-1GPT\s0 partitioned disk image, from a local
directory.  This can be attached to existing Linux VMs or used to
create new ones from scratch.
.PP
New \fInbdkit\-noextents\-filter\fR\|(1) can make sparse disks appear fully
allocated.
.PP
Plugins can now be written in the Rust programming language, see
\&\fInbdkit\-rust\-plugin\fR\|(3).
.PP
The old \fInbdkit\-xz\-plugin\fR\|(1) has been removed.  Use
.PP
.Vb 1
\& nbdkit \-\-filter=xz file file.xz
.Ve
.PP
as a replacement.  This filter can be placed on top of other plugins
such as curl (for decompressing a remote web \s-1URL\s0).
.PP
\&\f(CW\*(C`NBD_CMD_BLOCK_STATUS\*(C'\fR has been implemented allowing clients to query
which parts of the disk are allocated, holes or zeroes.  Plugins and
filters have been extended to supply this information in many cases.
This required adding minimal support for \s-1NBD\s0 protocol Structured
Replies, \f(CW\*(C`NBD_CMD_FLAG_REQ_ONE\*(C'\fR and \f(CW\*(C`NBD_CMD_FLAG_DF\*(C'\fR.  (Thanks to
Eric Blake for extensive help with this one.)
.PP
\&\fInbdkit\-vddk\-plugin\fR\|(1) has been updated to \s-1VDDK 6.7,\s0 but now also
works back as far as \s-1VDDK 5.1.1.\s0  It supports extents, flush and \s-1FUA.\s0
Also added: new flags \f(CW\*(C`single\-link\*(C'\fR and \f(CW\*(C`unbuffered\*(C'\fR.  (Thanks to
Martin Kletzander).
.PP
The line \*(L"All rights reserved.\*(R" was removed from the license, with the
agreement of all nbdkit contributors.  Note this does not change the
license.
.PP
\&\f(CW\*(C`nbdkit_error\*(C'\fR errors are printed in red when writing to the
terminal, making them much easier to see.
.PP
\&\f(CW\*(C`nbdkit_parse_size\*(C'\fR rejects negative values, eg.
\&\f(CW\*(C`nbdkit memory size=\-100\*(C'\fR (Nikolay Ivanets).
.PP
\&\fInbdkit\-curl\-plugin\fR\|(1) now supports cookies, password auth and
proxies.  It can also limit URLs to whitelisted protocols.  This makes
it broadly feature equivalent to and a replacement for the qemu curl
block driver.
.PP
\&\fInbdkit\-partitioning\-plugin\fR\|(1) can now create \s-1MBR\s0 logical
partitions.  Previously it only supported 4 \s-1MBR\s0 primary partitions and
if you wanted more than that you had to use \s-1GPT.\s0
.PP
\&\fInbdkit\-partition\-filter\fR\|(1) also supports \s-1MBR\s0 logical partitions.
.PP
\&\fInbdkit\-python\-plugin\fR\|(3) creates plugins which are compatible with
Python >= 3.7.
.PP
Tests are now run under \f(CW\*(C`MALLOC_CHECK_=1\*(C'\fR and
\&\f(CW\*(C`MALLOC_PERTURB_=\f(CIrandom\f(CW\*(C'\fR.  This causes some tests to crash
(silently) because of a shutdown race which needs to be fixed.
.PP
Test shell scripts now have a generic \f(CW\*(C`requires\*(C'\fR function to skip
tests if features are not present.
.PP
C99 type \f(CW\*(C`bool\*(C'\fR is now used in most places where appropriate.
.PP
The protocol and connections code in the server has been split up
because the single file had grown very large.  (Thanks to Eric Blake
for helping with protocol issues).
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInbdkit\fR\|(1),
https://www.redhat.com/archives/virt\-tools\-list/2019\-April/msg00045.html.
.SH "AUTHORS"
.IX Header "AUTHORS"
Eric Blake
.PP
Richard W.M. Jones
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2019 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:
.IP "\(bu" 4
Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
.IP "\(bu" 4
Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
.IP "\(bu" 4
Neither the name of Red Hat nor the names of its contributors may be
used to endorse or promote products derived from this software without
specific prior written permission.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS\s0 ''\s-1AS IS\s0'' \s-1AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\s0 (\s-1INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES\s0; \s-1LOSS OF
USE, DATA, OR PROFITS\s0; \s-1OR BUSINESS INTERRUPTION\s0) \s-1HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT\s0 (\s-1INCLUDING NEGLIGENCE OR OTHERWISE\s0) \s-1ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.\s0
