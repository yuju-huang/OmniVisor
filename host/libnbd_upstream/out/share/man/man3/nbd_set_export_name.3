.\" Automatically generated by Podwrapper::Man 1.3.7 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "nbd_set_export_name 3"
.TH nbd_set_export_name 3 "2020-06-10" "libnbd-1.3.7" "LIBNBD"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nbd_set_export_name \- set the export name
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& #include <libnbd.h>
\&
\& int nbd_set_export_name (struct nbd_handle *h,
\&                          const char *export_name);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
For servers which require an export name or can serve different
content on different exports, set the \f(CW\*(C`export_name\*(C'\fR to
connect to.  The default is the empty string \f(CW""\fR.
.PP
This is only relevant when connecting to servers using the
newstyle protocol as the oldstyle protocol did not support
export names.  The \s-1NBD\s0 protocol limits export names to
4096 bytes, but servers may not support the full length.
The encoding of export names is always \s-1UTF\-8.\s0
.PP
This call may be skipped if using \fInbd_connect_uri\fR\|(3) to connect
to a \s-1URI\s0 that includes an export name.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
If the call is successful the function returns \f(CW0\fR.
.SH "ERRORS"
.IX Header "ERRORS"
On error \f(CW\*(C`\-1\*(C'\fR is returned.
.PP
Refer to \*(L"\s-1ERROR HANDLING\*(R"\s0 in \fIlibnbd\fR\|(3)
for how to get further details of the error.
.SH "HANDLE STATE"
.IX Header "HANDLE STATE"
The handle must be
newly created,
otherwise this call will return an error.
.SH "VERSION"
.IX Header "VERSION"
This function first appeared in libnbd 1.0.
.PP
If you need to test if this function is available at compile time
check if the following macro is defined:
.PP
.Vb 1
\& #define LIBNBD_HAVE_NBD_SET_EXPORT_NAME 1
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInbd_connect_uri\fR\|(3),
\&\fInbd_create\fR\|(3),
\&\fInbd_get_export_name\fR\|(3),
\&\fIlibnbd\fR\|(3).
.SH "AUTHORS"
.IX Header "AUTHORS"
Eric Blake
.PP
Richard W.M. Jones
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2019 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software; you can redistribute it and/or
modify it under the terms of the \s-1GNU\s0 Lesser General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.
.PP
This library is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0  See the \s-1GNU\s0
Lesser General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, \s-1MA 02110\-1301 USA\s0
