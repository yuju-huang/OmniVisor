.\" Automatically generated by Podwrapper::Man 1.3.7 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "nbd_is_rotational 3"
.TH nbd_is_rotational 3 "2020-06-10" "libnbd-1.3.7" "LIBNBD"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nbd_is_rotational \- is the NBD disk rotational (like a disk)?
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& #include <libnbd.h>
\&
\& int nbd_is_rotational (struct nbd_handle *h);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Returns true if the disk exposed over \s-1NBD\s0 is rotational
(like a traditional floppy or hard disk).  Returns false if
the disk has no penalty for random access (like an \s-1SSD\s0 or
\&\s-1RAM\s0 disk).
.PP
This call does not block, because it returns data that is saved in
the handle from the \s-1NBD\s0 protocol handshake.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
This call returns a boolean value.
.SH "ERRORS"
.IX Header "ERRORS"
On error \f(CW\*(C`\-1\*(C'\fR is returned.
.PP
Refer to \*(L"\s-1ERROR HANDLING\*(R"\s0 in \fIlibnbd\fR\|(3)
for how to get further details of the error.
.SH "HANDLE STATE"
.IX Header "HANDLE STATE"
The handle must be
connected and finished handshaking with the server, or shut down,
otherwise this call will return an error.
.SH "VERSION"
.IX Header "VERSION"
This function first appeared in libnbd 1.0.
.PP
If you need to test if this function is available at compile time
check if the following macro is defined:
.PP
.Vb 1
\& #define LIBNBD_HAVE_NBD_IS_ROTATIONAL 1
.Ve
.SH "EXAMPLE"
.IX Header "EXAMPLE"
This example is also available as \fIexamples/server\-flags.c\fR
in the libnbd source code.
.PP
.Vb 8
\& /* This example shows how to connect to an NBD
\&  * server and print the export flags.
\&  *
\&  * You can test it with nbdkit like this:
\&  *
\&  * nbdkit \-U \- memory 1M \e
\&  *   \-\-run \*(Aq./server\-flags $unixsocket\*(Aq
\&  */
\& 
\& #include <stdio.h>
\& #include <stdlib.h>
\& 
\& #include <libnbd.h>
\& 
\& int
\& main (int argc, char *argv[])
\& {
\&   struct nbd_handle *nbd;
\&   int flag;
\& 
\&   if (argc != 2) {
\&     fprintf (stderr, "%s socket\en", argv[0]);
\&     exit (EXIT_FAILURE);
\&   }
\& 
\&   /* Create the libnbd handle. */
\&   nbd = nbd_create ();
\&   if (nbd == NULL) {
\&     fprintf (stderr, "%s\en", nbd_get_error ());
\&     exit (EXIT_FAILURE);
\&   }
\& 
\&   /* Connect to the NBD server over a
\&    * Unix domain socket.
\&    */
\&   if (nbd_connect_unix (nbd, argv[1]) == \-1) {
\&     fprintf (stderr, "%s\en", nbd_get_error ());
\&     exit (EXIT_FAILURE);
\&   }
\& 
\&   /* Read and print the flags. */
\& #define PRINT_FLAG(flag_fn)                     \e
\&   flag = flag_fn (nbd);                         \e
\&   if (flag == \-1) {                             \e
\&     fprintf (stderr, "%s\en", nbd_get_error ()); \e
\&     exit (EXIT_FAILURE);                        \e
\&   }                                             \e
\&   printf (#flag_fn " = %s\en",                   \e
\&           flag ? "true" : "false");
\& 
\&   PRINT_FLAG (nbd_can_cache);
\&   PRINT_FLAG (nbd_can_df);
\&   PRINT_FLAG (nbd_can_flush);
\&   PRINT_FLAG (nbd_can_fua);
\&   PRINT_FLAG (nbd_can_multi_conn);
\&   PRINT_FLAG (nbd_can_trim);
\&   PRINT_FLAG (nbd_can_zero);
\& #if LIBNBD_HAVE_NBD_CAN_FAST_ZERO /* Added in 1.2 */
\&   PRINT_FLAG (nbd_can_fast_zero);
\& #endif
\&   PRINT_FLAG (nbd_is_read_only);
\&   PRINT_FLAG (nbd_is_rotational);
\& 
\&   /* Close the libnbd handle. */
\&   nbd_close (nbd);
\& 
\&   exit (EXIT_SUCCESS);
\& }
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fInbd_create\fR\|(3),
\&\*(L"Flag calls\*(R" in \fIlibnbd\fR\|(3),
\&\fIlibnbd\fR\|(3).
.SH "AUTHORS"
.IX Header "AUTHORS"
Eric Blake
.PP
Richard W.M. Jones
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2019 Red Hat Inc.
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software; you can redistribute it and/or
modify it under the terms of the \s-1GNU\s0 Lesser General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.
.PP
This library is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0  See the \s-1GNU\s0
Lesser General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, \s-1MA 02110\-1301 USA\s0
